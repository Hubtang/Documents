<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "V2V-guide.ent">
%BOOK_ENTITIES;
]>

<chapter id="chap-Convert_to_EayunOS">
  <title>将虚拟机转化到 &OVIRT; 中运行</title>
  <para>
    <command>virt-v2v</command> 能够将虚拟机从 Xen、KVM 以及 VMWare ESX/ESX(i) 环境中转化到 &OVIRT; 中运行。在转化之前，您必须附加一个导出存储域到您所用的 &OVIRT; 数据中心中。<xref linkend="sect-Convert_to_EayunOS-Attaching_an_Export_Storage_Domain"/>详细介绍了附加导出存储域的过程。更多关于导出存储域的信息，请参考《&OVIRT; 系统管理员手册》。
  </para>

  <section id="sect-Convert_to_EayunOS-Acceptable_Converted_Storage_Output_Formats">
    <title>可接受的转化后存储输出格式</title>
    <para>
      当转化一个虚拟机到 &OVIRT; 中运行时，您必须了解的有一点很重要的是，并非所有存储格式及分配策略的组合都能够被支持。支持的组合因所要导入虚拟机到的 &OVIRT; 数据中心的数据存储域使用块设备（FC 或者 iSCSI）存储或者文件（NFS）存储而不同。另外，您还需要注意到 <command>virt-v2v</command> 写入到一个必须为 NFS 的<emphasis>导出</emphasis>存储域。
    </para>
    <note>
      <para>
        虚拟机能否成功导入到 &OVIRT; 环境中的重要因素是数据存储域的类型。<command>virt-v2v</command> 不能够自动检测该数据中心的类型，因此用户必须手动完成这项检查以保证配置正确。
      </para>
    </note>
    <table>
      <title>分配策略：预分配</title>
      <tgroup cols="3" align="left" colsep="1" rowsep="1">
        <thead>
          <row>
            <entry>
              数据存储域类型
            </entry>
            <entry>
              存储格式
            </entry>
            <entry>
              是否支持
            </entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry morerows="1">
              NFS
            </entry>
            <entry>
              raw
            </entry>
            <entry>
              是
            </entry>
          </row>
          <row>
            <entry>
              qcow2
            </entry>
            <entry>
              否
            </entry>
          </row>
          <row>
            <entry morerows="1">
              FC/iSCSI
            </entry>
            <entry>
              raw
            </entry>
            <entry>
              是
            </entry>
          </row>
          <row>
            <entry>
              qcow2
            </entry>
            <entry>
              否
            </entry>
          </row>
        </tbody>
      </tgroup>
    </table>
    <table>
      <title>分配策略：稀疏分配</title>
      <tgroup cols="3" align="left" colsep="1" rowsep="1">
        <thead>
          <row>
            <entry>
              数据存储域类型
            </entry>
            <entry>
              存储格式
            </entry>
            <entry>
              是否支持
            </entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry morerows="1">
              NFS
            </entry>
            <entry>
              raw
            </entry>
            <entry>
              是
            </entry>
          </row>
          <row>
            <entry>
              qcow2
            </entry>
            <entry>
              是
            </entry>
          </row>
          <row>
            <entry morerows="1">
              FC/iSCSI
            </entry>
            <entry>
              raw
            </entry>
            <entry>
              否
            </entry>
          </row>
          <row>
            <entry>
              qcow2
            </entry>
            <entry>
              是
            </entry>
          </row>
        </tbody>
      </tgroup>
    </table>
    <para>
      除非分别使用 <command>-of</command> 及 <command>-oa</command> 参数指定数据格式及分配策略，否则要被 <command>virt-v2v</command> 所转化的虚拟机的数据格式及分配策略将会被固定保留。要使用稀疏分配策略导入虚拟机到 FC 或者 iSCSI 类型的数据中心，虚拟机镜像的存储格式必须被转换为 qcow2。这将通过向 <command>virt-v2v</command> 命令传入 <command>-of qcow2 -oa sparse</command> 参数来实现。请注意在 raw 与 qcow2 之间进行格式转换是一项相当耗费资源的操作，并且大约将原本所需要的转换时间增加了一倍之多。
    </para>
    <important>
      <para>
        虽然 <command>virt-v2v</command> 能够写入成预分配的 qcow2 存储，&OVIRT; 中并不支持这种方式。如果您使用这种组合，那么导入虚拟机到 &OVIRT; 中时将会失败。
      </para>
    </important>
  </section>

  <section id="sect-Convert_to_EayunOS-Attaching_an_Export_Storage_Domain">
    <title>附加导出存储域</title>
    <para>
      导入虚拟机到 &OVIRT; 之前，您首先必须附加一个导出存储域到所使用的 &OVIRT; 数据中心中。
    </para>
    <para>
      导出存储域能够被附加到数据中心中从而使得能够从一个数据中心向另外一个数据中心中导入或者导出虚拟机。导出存储域同样能够用以备份虚拟机及模板。
    </para>
    <note>
      <para>
        导出存储域在同一时刻只能被附加到单独一个数据中心中。
      </para>
    </note>
    <procedure>
      <title>附加导出存储域</title>
      <step>
        <para>
          登录到 &OVIRT; 管理员门户。点击<emphasis>数据中心</emphasis>标签，选择需要将导出存储域附加到的数据中心。
        </para>
      </step>
      <step>
        <para>
          在详情面板中选择<emphasis>存储</emphasis>标签。
        </para>
      </step>
      <step>
        <para>
          点击<emphasis>附加导出</emphasis>按钮添加镜像存放的存储位置。
          <!-- TODO: Figure 4.1. Attaching an Export Domain -->
        </para>
      </step>
      <step>
        <para>
          如果有可用的导出域，<emphasis>附加导出域</emphasis> 窗口将会弹出。在列表中选择需要附加的导出域。
        </para>
      </step>
      <step>
        <para>
          点击<emphasis>确定</emphasis>按钮。新附加的导出存储域将会在详情面板的<emphasis>存储</emphasis>标签中显示状态为 <replaceable>Locked</replaceable>，然后状态会改变为 <replaceable>Inactive</replaceable>。
        </para>
      </step>
      <step>
        <para>
          在详情面板的<emphasis>存储标签下</emphasis>选择该新附加的导出存储域，然后点击<emphasis>激活</emphasis>按钮。
        </para>
      </step>
      <step>
        <para>
          一会儿之后，该导出域将会被激活并显示状态为 <replaceable>Active</replaceable>。
        </para>
      </step>
    </procedure>
  </section>

  <section id="sect-Convert_to_EayunOS-Converting_a_Virtual_Machine">
    <title>转换虚拟机到 &OVIRT;</title>
    <para>
      <command>virt-v2v</command> 将一个外部宿主机中的虚拟机转换到 &OVIRT; 环境中。它会自动将虚拟机的镜像及元数据进行打包并上传至 &OVIRT; 环境中的导出存储域中。关于导出存储域的更多信息，请参考<xref linkend="sect-Convert_to_EayunOS-Attaching_an_Export_Storage_Domain"/>。<command>virt-v2v</command> 在转换之前总会先对存储镜像进行一次复制。
    </para>
    <!-- TODO: Figure 4.2. Converting a virtual machine -->
    <para>
      使用 &OVIRT; 管理员门户，您可以将虚拟机镜像从导出存储域中导入到 &OVIRT; 中。
    </para>
    <!-- TODO: Figure 4.3. Importing a virtual machine -->
    <section id="sect-Convert_to_EayunOS-Preparing_to_Convert_a_Virtual_Machine">
      <title>转换虚拟机前的准备工作</title>
      <para>
        转换虚拟机之前，请确保您完成了如下步骤：
      </para>
      <procedure>
        <title>转换虚拟机前的准备工作</title>
        <step>
          <para>
            创建一个 NFS 类型的导出域。<command>virt-v2v</command> 能够直接传输转换后的机器到 NFS 导出存储域中。虚拟机能够从该导出存储域中被导入到 &OVIRT; 环境的数据中心中。该存储域必须能够被运行 <command>virt-v2v</command> 的机器所挂载。当向 &OVIRT; 的导出域中转换时，<command>virt-v2v</command> 必须使用 root 权限运行。
          </para>
          <note>
            <para>
              导出域是作为一个 NFS 共享存储被访问的。默认情况下，RHEL6/Centos6 使用的是 NFSv4，您不需要额外的进行配置。但是对于 NFSv2 和 NFSv3 的客户端，<command>rpcbind</command> 和 <command>nfslock</command> 服务必须在您运行 <command>virt-v2v</command> 的机器上运行。您可能还需要配置网络以保证存储服务器能够使用 NFS 进行连接。更多关于存储的信息，请参考相关的存储管理文档。
            </para>
          </note>
        </step>
        <step>
          <para>
            在 <filename>virt-v2v.conf</filename> 文件中指定网络映射。这一步骤不是必须的，并且在通常情况下并不需要进行配置。
          </para>
          <para>
            如果您的虚拟机有多个网络接口的话，您就必须编辑 <filename>/etc/virt-v2v.conf</filename> 文件为所有的网络接口指定网络映射。您可以使用 <command>-f</command> 参数指定一个非默认位置的 <filename>virt-v2v.conf</filename> 文件。如果您是要将虚拟机同时导入到 libvirt 和 &OVIRT; 之中，每个导入都需要使用独立的 <filename>virt-v2v.conf</filename> 文件。这是由于转换后的网卡桥接设备需要针对不同的输出类型（libvirt 或者 &OVIRT;）进行不同的配置。
          </para>
          <para>
            如果您的虚拟机只有一个网卡接口的话，使用 <command><replaceable>--network</replaceable></command> 或者 <command><replaceable>--bridge</replaceable></command> 参数，会比修改 <filename>virt-v2v.conf</filename> 文件要来得更简单。
          </para>
        </step>
        <step>
          <para>
            在 <filename>virt-v2v.conf</filename> 为转换创建一个配置集。这一步骤也是可选的。配置集指定了转换的方式、存储路径、输出格式以及存储分配策略。当您定义了一个配置集之后，您可以使用 <command><replaceable>--profile</replaceable></command> 参数来使用该配置集，而不需要单独提供 <command><replaceable>-o</replaceable></command>、<command><replaceable>-os</replaceable></command>、<command><replaceable>-of</replaceable></command> 以及 <command><replaceable>-oa</replaceable></command> 参数。详细的信息请参考 virt-v2v.conf(5)。
          </para>
        </step>
      </procedure>
      <section id="sect-Convert_to_EayunOS-Preparing_to_Convert_a_Virtual_Machine_Running_Linux">
        <title>转换运行 Linux 的虚拟机前的准备工作</title>
        <para>
          无论您是从什么宿主机上将虚拟机转换到 &OVIRT; 上，以下步骤都是必须完成的。
        </para>
        <!-- TODO: 又涉及很多的 RHN -->
      </section>
      <section id="sect-Convert_to_EayunOS-Preparing_to_Convert_a_Virtual_Machine_Runing_Windows">
        <title>转换运行 Windows 的虚拟机前的准备工作</title>
        <important>
          <para>
            <command>virt-v2v</command> 不支持 Windows 还原控制台的转换。假如虚拟机中安装了还原控制台并且在转换过程中启用了 VirtIO，尝试启动还原控制台将会导致一个停止错误。
          </para>
          <para>
            Windows XP x86 并不支持在 VirtIO 系统上的 Windows 还原控制台，所以这种场景下没有解决办法。但是在 Windows XP AMD64 及 Windows 2003(x86 和 AMD64)中，您能够通过在转换之后重新安装还原控制台来解决这个问题。重装还原控制台的步骤和您第一次安装时一样，而且也不需要首先卸载还原控制台。还原控制台重装之后，仍然能够如预期一般正常工作。
          </para>
        </important>
        <important>
          <para>
            当转换带有多个磁盘驱动器的 Windows 虚拟机到 &OVIRT; 中时，在某些特定的情况下有可能发生额外的磁盘驱动器不默认显示的情况。&OVIRT; 总是会添加一个 CD-ROM 设备到转换后的虚拟机中。如果该虚拟机在转换之前没有 CD-ROM 设备，那么该新增的 CD-ROM 设备就有可能被分配一个与虚拟机原有的磁盘驱动器相冲突的盘符。这将导致原有的磁盘不能够被访问。原有的该磁盘驱动器仍然能够通过手动给其指定一个新盘符来访问。您也可以通过手动指定分配给新增的 CD-ROM 设备的盘符然后重启虚拟机，来保持系统中磁盘驱动器盘符与原有的一样。
          </para>
        </important>
        <para>
          无论您是从什么宿主机上将虚拟机转换到 &OVIRT; 上，以下步骤都是必须完成的。转换过程的还需要在 &OVIRT; 管理端中进行其它操作才能完成。参考<!-- TODO: 链接到 7.2.2, "Configuration changes for Windows virtual machines" -->以了解操作的详情。
        </para>
        <!-- TODO: RHN -->
      </section>
      <section id="sect-Convert_to_EayunOS-Preparing_to_Convert_a_Local_Xen_Virtual_Machine">
        <title>转换一个本地 Xen 虚拟机前的准备工作</title>
        <para>
          以下步骤在您要将一个原本基于 Xen 的虚拟机转换到基于 KVM 上运行时是必须的。但在转换一个直接从 libvirt/Xen 实例中导入的 Xen 虚拟机时是不需要的。
        </para>
        <procedure>
          <title>转换一个本地 Xen 虚拟机前的准备工作</title>
          <step>
            <para>
              获得虚拟机的 XML 文件。
            </para>
            <para>
              <command>virt-v2v</command> 使用 libvirt 的 domain 描述文件来确定虚拟机的配置，包括其镜像的存储路径。在转换之前，从运行该虚拟机的主机上使用以下命令获得该描述文件：<screen>virsh dumpxml <filename><replaceable>guest_name</replaceable></filename> &gt; <filename><replaceable>guset_name.xml</replaceable></filename></screen>
            </para>
            <para>
              由于 libvirt 需要连接到一个运行中的 Xen 宿主机获取虚拟机的元数据，因此这将需要使用一个 Xen 内核来获取该 XML 文件。转换的过程已经针对 KVM 进行了优化，所以在运行 Xen 内核的时候获取该 domain 的数据，然后在运行 KVM 内核时进行虚拟机的转换，会比在 Xen 内核之上进行转换更有效率。
            </para>
          </step>
        </procedure>
      </section>
    </section>
    <section id="sect-Convert_to_EayunOS-Converting_a_Virtual_Machine_A">
      <title>转换虚拟机</title>
      <para>
        在您完成转换虚拟机的准备工作之后，就可以使用 <command>virt-v2v</command> 来执行具体的转换过程了。本节将介绍转换虚拟机的步骤，以及 <command>virt-v2v</command> 的命令语法。
      </para>
      <para>
        您必须注意虚拟机的转换过程是一个资源密集型的过程，过程中需要将虚拟机的整个磁盘镜像进行复制。在典型的环境中，复制单台虚拟机所需要的时间大概在 5-10 分钟。<xref linkend="example-Typical_virt_v2v_Conversion_Time"/>展示了一个在 3 年旧的消费级硬件上通过千兆网络上的 SSH 复制一个 8GB 大的磁盘镜像时所花的时间：
      </para>
      <example id="example-Typical_virt_v2v_Conversion_Time">
        <title>典型的 virt-v2v 转换时间</title>
        <screen>
win2k3r2-pv-32.img: 100% [===========================================]D 0h02m57s
virt-v2v: win2k3r2-pv-32 configured with virtio drivers.
        </screen>
      </example>
      <para>
        确定转换时间的主要因素是要复制的磁盘大小。对于平均水平硬件上具有单个 20GB 大小以下磁盘的虚拟机，转换过程所需要的时间应该在 10 分钟以内。
      </para>
      <section id="sect-Convert_to_EayunOS-virt_v2v">
        <title>virt-v2v</title>
        <para>
          <command>virt-v2v</command> 将一个外部宿主机上运行的虚拟机转换到 &OVIRT; 之中。将虚拟机转换到 &OVIRT; 中一般用到的命令语法如下：
        </para>
        <screen>
virt-v2v -i libvirtxml -o rhev -os storage.example.com:/exportdomain --network ovirtmgmt <filename><replaceable>guest_name.xml</replaceable></filename>
virt-v2v -o rhev -os storage.example.com:/exportdomain --network ovirtmgmt <filename><replaceable>guest_name</replaceable></filename>
virt-v2v -ic esx://esx.example.com/?no_verify=1 -o rhev -os storage.example.com:/exportdomain --network ovirtmgmt <filename><replaceable>guest_name</replaceable></filename>
        </screen>
        <para>
          详细的 <command>virt-v2v</command> 可用参数的指南在<!-- TODO: 链接到 7.1, "virt-v2v Parameters" -->。
        </para>
        <important>
          <para>
            目前，<command>virt-v2v</command> 并不支持转换具有多于 4 个 IDE 磁盘的虚拟机到 &OVIRT; 环境中。转换一台拥有 5 个及以上磁盘的虚拟机的尝试将会失败。
          </para>
        </important>
      </section>
      <section id="sect-Convert_to_EayunOS-Converting_a_Local_Xen_Virtual_Machine">
        <title>转换本地运行的 Xen 虚拟机</title>
        <para>
          确保虚拟机的 XML 文件在本地可用，在该 XML 文件中指向的存储路径也在本地可用并且路径相同。
        </para>
        <para>
          运行如下命令从 XML 文件中开始虚拟机转换：
        </para>
        <screen>
virt-v2v -i libvirtxml -o rhev -os storage.example.com:/exportdomain --network ovirtmgmt <filename><replaceable>guest_name.xml</replaceable></filename>
        </screen>
        <para>
          在上面的命令中，<filename>storage.example.com:/exportdomain</filename> 是导出存储域，<emphasis>ovirtmgmt</emphasis> 是转换后的虚拟机需要连接到的网络，<filename>guest_name.xml</filename> 是包含虚拟机信息的 XML 文件的路径。
        </para>
        <para>
          在您的虚拟机只有一个网络接口的情况下，您还可以使用 <command><replaceable>--bridge</replaceable></command> 参数来连接到本地管理的网络。假如您的虚拟机有多个网络接口，请编辑 <filename>/etc/virt-v2v.conf</filename> 指定所有接口的网络映射。
        </para>
        <para>
          运行如下命令从一个运行中的 Xen 宿主机上转换一台虚拟机：
        </para>
        <screen>
virt-v2v -ic xen:/// -o rhev -os storage.example.com:/exportdomain --network ovirtmgmt <filename><replaceable>guest_name</replaceable></filename>
        </screen>
        <para>
          在上面的命令中，<filename>storage.example.com:/exportdomain</filename> 是导出存储域，<emphasis>ovirtmgmt</emphasis> 是转换后的虚拟机需要连接到的网络，<filename>guest_name</filename> 是 Xen 虚拟机的名称。
        </para>
        <para>
          在您的虚拟机只有一个网络接口的情况下，您还可以使用 <command><replaceable>--bridge</replaceable></command> 参数来连接到本地管理的网络。假如您的虚拟机有多个网络接口，请编辑 <filename>/etc/virt-v2v.conf</filename> 指定所有接口的网络映射。
        </para>
        <para>
          如果您的虚拟机使用了 Xen 半虚拟化内核（内核名称通常为 kernel-xen 或者 kernel-xenU），<command>virt-v2v</command> 会在转换过程中尝试安装新的内核。您可以在转换之前安装另外的不在其名称中表现出其所在宿主机的普通内核来避免此过程。但是您不能将该另外安装的内核作为默认内核，因为 Xen 将无法启动它。<command>virt-v2v</command> 在转换过程中将会自动将其设置为默认内核。
        </para>
      </section>
      <section id="sect-Convert_to_EayunOS-Converting_a_Remote_Xen_Virtual_Machine">
        <title>转换远程的 Xen 虚拟机</title>
        <para>
          Xen 虚拟机能够通过 SSH 被远程进行转换。确保运行虚拟机的主机能够通过 SSH 访问。另外，在转换具有多个磁盘的虚拟机时，每个磁盘的转换都需要一个独立的 SSH 会话来进行。
        </para>
        <important>
          <para>
            我们建议您在进行转换之前设置 SSH 使用密钥进行验证。否则用户将被要求为每个需要传输的虚拟机磁盘都手动输入 SSH 密码。即便在传输完成之后但在 SSH 会话超时之前错误地手动输入密码，都会导致 <command>virt-v2v</command> 失败。这在磁盘很大的情景下显得尤为重要，由于磁盘的传输可能需要一段无法估计长度的时间。
          </para>
        </important>
        <para>
          运行如下命令进行虚拟机的转换：
        </para>
        <screen>
virt-v2v -ic xen+ssh://root@vmhost.example.com -o rhev -os storage.example.com:/exportdomain --network ovirtmgmt <filename><replaceable>guest_name</replaceable></filename>
        </screen>
        <para>
          在上面的命令中，<emphasis>vmhost.example.com</emphasis> 是运行虚拟机的主机，<filename>storage.example.com:/exportdomain</filename> 是导出存储域，<emphasis>ovirtmgmt</emphasis> 是转换后的虚拟机需要连接到的网络，<filename>guest_name</filename> 是 Xen 虚拟机的名称。
        </para>
        <para>
          在您的虚拟机只有一个网络接口的情况下，您还可以使用 <command><replaceable>--bridge</replaceable></command> 参数来连接到本地管理的网络。假如您的虚拟机有多个网络接口，请编辑 <filename>/etc/virt-v2v.conf</filename> 指定所有接口的网络映射。
        </para>
        <para>
          如果您的虚拟机使用了 Xen 半虚拟化内核（内核名称通常为 kernel-xen 或者 kernel-xenU），<command>virt-v2v</command> 会在转换过程中尝试安装新的内核。您可以在转换之前安装另外的不在其名称中表现出其所在宿主机的普通内核来避免此过程。但是您不能将该另外安装的内核作为默认内核，因为 Xen 将无法启动它。<command>virt-v2v</command> 在转换过程中将会自动将其设置为默认内核。
        </para>
      </section>
      <section id="sect-Convert_to_EayunOS-Converting_a_Local_KVM_Virtual_Machine">
        <title>转换一个本地的 KVM 虚拟机</title>
        <para>
          使用下列步骤转换一个本地的 KVM 虚拟机:
        </para>
        <procedure>
          <title>转换本地的 KVM 虚拟机</title>
          <step>
            <para>
              <emphasis>停止虚拟机</emphasis>。
            </para>
            <para>
              <orderedlist numeration="loweralpha">
                <listitem>
                  <para>
                    在进行 v2v 过程之前确保该虚拟机已停止。
                  </para>
                </listitem>
                <listitem>
                  <para>
                    停止虚拟机之后，运行 <command>virsh define &lt;path-to-guest.xml&gt;</command>将停止的虚拟机置入到 libvirt 的管理之下。这个命令使得 <command>virt-v2v</command> 能够识别该虚拟机并转换之。
                  </para>
                </listitem>
              </orderedlist>
            </para>
          </step>
          <step>
            <para>
              运行如下命令进行虚拟机的转换：
            </para>
            <screen>
virt-v2v -o rhev -ic qemu:///system -os storage.example.com:/exportdomain --network ovirtmgmt <filename><replaceable>guest_name</replaceable></filename>
            </screen>
            <para>
              在上面的命令中，<filename>storage.example.com:/exportdomain</filename> 是导出存储域，<emphasis>ovirtmgmt</emphasis> 是转换后的虚拟机需要连接到的网络，<filename>guest_name</filename> 是 KVM 虚拟机的名称。
            </para>
            <para>
              在您的虚拟机只有一个网络接口的情况下，您还可以使用 <command><replaceable>--bridge</replaceable></command> 参数来连接到本地管理的网络。假如您的虚拟机有多个网络接口，请编辑 <filename>/etc/virt-v2v.conf</filename> 指定所有接口的网络映射。
            </para>
          </step>
        </procedure>
      </section>
      <section id="sect-Convert_to_EayunOS-Converting_a_Remote_KVM_Virtual_Machine">
        <title>转换远程的 KVM 虚拟机</title>
        <para>
          KVM 虚拟机能够通过 SSH 被远程进行转换。确保运行虚拟机的主机能够通过 SSH 访问。另外，在转换具有多个磁盘的虚拟机时，每个磁盘的转换都需要一个独立的 SSH 会话来进行。
        </para>
        <important>
          <para>
            我们建议您在进行转换之前设置 SSH 使用密钥进行验证。否则用户将被要求为每个需要传输的虚拟机磁盘都手动输入 SSH 密码。即便在传输完成之后但在 SSH 会话超时之前错误地手动输入密码，都会导致 <command>virt-v2v</command> 失败。这在磁盘很大的情景下显得尤为重要，由于磁盘的传输可能需要一段无法估计长度的时间。
          </para>
        </important>
        <para>
          运行如下命令进行虚拟机的转换：
        </para>
        <screen>
virt-v2v -ic qemu+ssh://root@kvmhost.example.com/system -o rhev -os storage.example.com:/exportdomain --network ovirtmgmt <filename><replaceable>guest_name</replaceable></filename>
        </screen>
        <para>
          在上面的命令中，<emphasis>kvmhost.example.com</emphasis> 是运行虚拟机的主机，<filename>storage.example.com:/exportdomain</filename> 是导出存储域，<emphasis>ovirtmgmt</emphasis> 是转换后的虚拟机需要连接到的网络，<filename>guest_name</filename> 是 KVM 虚拟机的名称。
        </para>
        <para>
          在您的虚拟机只有一个网络接口的情况下，您还可以使用 <command><replaceable>--bridge</replaceable></command> 参数来连接到本地管理的网络。假如您的虚拟机有多个网络接口，请编辑 <filename>/etc/virt-v2v.conf</filename> 指定所有接口的网络映射。
        </para>
      </section>
      <section id="sect-Convert_to_EayunOS-Converting_a_VMware_ESX_ESXi_Virtual_Machine">
        <title>转换 VMware ESX/ESX(i) 的虚拟机</title>
        <important>
          <para>
            当从 VMware ESX/ESX(i) 中转换 Windows 虚拟机时，请确保 VMware Tools 在虚拟机上没有被安装。在转换之前 VMware Tools 必须被卸载。如果一个装有 VMware Tools 的虚拟机被转换到 &OVIRT; 中，它将不能够正常工作。
          </para>
        </important>
        <para>
          请在转换虚拟机之前确保该虚拟机已被停止。
        </para>
        <para>
          运行如下命令进行虚拟机的转换：
        </para>
        <screen>
virt-v2v -ic esx://esx.example.com/ -o rhev -os storage.example.com:/exportdomain --network ovirtmgmt <filename><replaceable>guest_name</replaceable></filename>
        </screen>
        <para>
          在上面的命令中，<filename>storage.example.com:/exportdomain</filename> 是导出存储域，<emphasis>ovirtmgmt</emphasis> 是转换后的虚拟机需要连接到的网络，<filename>guest_name</filename> 是虚拟机的名称。
        </para>
        <para>
          在您的虚拟机只有一个网络接口的情况下，您还可以使用 <command><replaceable>--bridge</replaceable></command> 参数来连接到本地管理的网络。假如您的虚拟机有多个网络接口，请编辑 <filename>/etc/virt-v2v.conf</filename> 指定所有接口的网络映射。
        </para>
        <formalpara>
          <title>向 ESX/ESX(i) 服务器进行验证</title>
          <para>
            连接到 ESX/ESX(i) 服务器要求验证。<command>virt-v2v</command> 支持连接到 ESX/ESX(i) 服务器时使用密码进行验证。它将从 <filename>$HOME/.netrc</filename> 文件中读取密码等信息。该文件的格式在 <emphasis>netrc(5)</emphasis> 中有具体描述。以下是其一个例子：
          </para>
        </formalpara>
        <screen>
machine esx.example.com login root password P@ssw0rd
        </screen>
        <note>
          <para>
            <filename>.netrc</filename> 文件的权限位必须为 0600 才能够被 <command>virt-v2v</command> 正常读取。
          </para>
        </note>
        <formalpara>
          <title>使用无效的证书连接到 ESX/ESX(i) 服务器</title>
          <para>
            在非生产环境中，ESX/ESX(i) 服务器可能并没有有效的证书，例如一份自签名的证书也可能被使用。在这种情况下，如下所示，您可以在连接的 URI 之后添加 <emphasis><replaceable>?no_verify=1</replaceable></emphasis>来禁用证书验证：
          </para>
        </formalpara>
        <screen>
... -ic esx://esx.example.com/?no_verify=1 ...
        </screen>
      </section>
      <section id="sect-Convert_to_EayunOS-Converting_a_VMware_VMDK_Virtual_Machine">
        <title>从 VMware 的 VMDK 中转换虚拟机</title>
        <important>
          <para>
            虚拟机必须先使用 VMware OVF 工具导出成 OVA 格式，才能够使用这种方式转换到 &OVIRT; 环境中。关于如何将一台 VMDK 虚拟机导出成 OVA 格式的详细信息，请参考以下文档：<ulink url="http://www.vmware.com/support/developer/ovf/"/>。
          </para>
        </important>
        <para>
          转换一台 OVA 虚拟机并不需要停止该虚拟机。但是，如果原来的虚拟机继续运行，原来的虚拟机的状态和转换后的虚拟机的状态将会有所不同。
        </para>
        <para>
          运行如下命令从 OVA 镜像文件中转换虚拟机到 &OVIRT; 环境中：
        </para>
        <screen>
          virt-v2v -i ova --profile <filename><replaceable>myeayunosserver</replaceable></filename> <filename><replaceable>esx_guest</replaceable></filename>.ova
        </screen>
        <para>
          在上面的命令中，<emphasis>myeayunosserver</emphasis> 是转换虚拟机相关的配置集，<emphasis>esx_guest</emphasis> 是 ESX/ESX(i) 虚拟机的名称。
        </para>
      </section>
    </section>
    <section id="sect-Convert_to_EayunOS-Importing_and_Running_the_Converted_Virtual_Machine">
      <title>导入并运行转换后的虚拟机</title>
      <para>
        <command>virt-v2v</command> 在成功完成之后会将转换后的虚拟机上传至指定的导出域中。执行以下步骤导入并运行该转换后的虚拟机。
      </para>
      <procedure>
        <title>导入并运行转换后的虚拟机</title>
        <step>
          <para>
            进入 &OVIRT; 管理员门户，在<emphasis>存储</emphasis>标签下选择该导出域。该导出域的状态必须为 <emphasis>Active</emphasis>。
          </para>
        </step>
        <step>
          <para>
            在详情面板中选择<emphasis>虚拟机导入</emphasis>子标签列出可以导入的虚拟机。
          </para>
        </step>
        <step>
          <para>
            选择一个或者多个虚拟机并点击<emphasis>导入</emphasis>。系统将会弹出<emphasis>导入虚拟机</emphasis>窗口。
          </para>
        </step>
        <step>
          <para>
            在下拉菜单中选择数据中心中的<emphasis>默认的存储域</emphasis>、<emphasis>集群</emphasis>以及<emphasis>集群配额</emphasis>。
          </para>
        </step>
        <step>
          <para>
            勾选 <emphasis>Collapse 快照</emphasis>删除所有的快照还原点并将模板包含在基于模板的虚拟机中。点击<emphasis>确定</emphasis>开始导入虚拟机。
          </para>
        </step>
      </procedure>
      <para>
        关于导入虚拟机的更多信息，请参考《&OVIRT; 系统管理员手册》。
      </para>
      <formalpara>
        <title>网络配置</title>
        <para>
          目前 <command>virt-v2v</command> 无法自动重新配置虚拟机的网络。如果转换后的虚拟机并不和原来的虚拟机连接到同一个子网中，您可能需要手动更新虚拟机中的网络配置。
        </para>
      </formalpara>
    </section>
    <section id="sect-Convert_to_EayunOS-Scripting_the_v2v_Process">
      <title>为 v2v 过程编写脚本</title>
      <para>
        整个 v2v 的过程可以编写脚本来完成，从而实现大批量虚拟机的自动转换。该过程分为步，必须在不同的机器上运行。
      </para>
      <procedure>
        <title>为 v2v 过程编写脚本</title>
        <step>
          <para>
            使用 <command>virt-v2v</command> 转换虚拟机并将它们复制到导出存储域中。这一步骤必须在 Linux 机器上完成。该过程在<xref linkend="sect-Convert_to_EayunOS-Converting_a_Virtual_Machine_A"/>中已进行了详细介绍。
          </para>
        </step>
        <step>
          <para>
            转换完成之后，使用 &OVIRT; 管理员门户将虚拟机从导出存储域中导入。这一步骤必须在 &OVIRT; 管理端所在的服务器上完成。
          </para>
          <para>
            关于使用 &OVIRT; 管理员门户导入虚拟机的更多信息，请参考《&OVIRT; 系统管理员手册》。
          </para>
          <!-- TODO: Figure 4.4. Importing a virtual machine with the EayunOS Administration Portal -->
          <para>
            您还可以使用 Python SDK 或者命令行来从导出存储域中导入虚拟机。
          </para>
          <para>
            使用 SDK 导入虚拟机的方法如下：
          </para>
          <example>
            <title>使用 SDK 从导出存储域中导入虚拟机</title>
            <para>
              <screen>
api = API(url="http(s)://...:.../api",
          username="...",
          password="...",
          filter=False,
          debug=True)


sd = api.storagedomains.get(id="from-sd-id")
import_candidate = sd.vms.get(id="vm-to-import")
import_candidate.import_vm(
    action=params.Action(
        cluster=api.clusters.get(id="to-cluster-id"),
        storage_domain=api.storagedomains.get(id="to-sd-id")
    )
)
              </screen>
            </para>
          </example>
          <note>
            <para>
              使用 SDK 方法时，相应的项目也可以使用 <command><replaceable>name=</replaceable></command> 参数获取和传入。
            </para>
          </note>
          <para>
            要使用命令行导入虚拟机，首先连接到 &OVIRT; 管理者命令行，然后运行如下命令：
          </para>
          <example>
            <title>使用命令行从导出存储域中导入虚拟机</title>
            <para>
              <screen>
action vm "vm-to-import" import_vm --storagedomain-identifier "from-sd-id" --cluster-id "to-cluster-id" --storage_domain-id "to-sd-id"
              </screen>
            </para>
          </example>
          <note>
            <para>
              使用命令行方法时，相应的项目也可以使用 <command><replaceable>-name</replaceable></command> 参数获取和传入。
            </para>
          </note>
        </step>
      </procedure>
    </section>
    <section id="sect-Convert_to_EayunOS-Scripted_Bulk_v2v_Process">
      <title>脚本化的批量 v2v 过程</title>
      <para>
        对于批量导入的场景来说，能够在单台机器上执行脚本化的 v2v 过程就显得非常有好处。您可以使用 REST API 向 &OVIRT; 管理端发起远程过程调用。这使得在单台 Linux 主机上完成 v2v 过程的两个步骤变得可能。<!-- TODO: <xref linkend="Figure-Scriptd_Bulk_v2v_Process"/> -->展现了脚本执行的过程。
      </para>
      <!-- TODO: Figure 4.5. Script bulk v2v process -->
      <para>
        脚本化的批量 v2v 过程包括以下几个步骤，如<!-- TODO: <xref linkend="Figure-Scriptd_Bulk_v2v_Process"/> -->中所示：
      </para>
      <orderedlist>
        <listitem>
          <para>
            从源宿主机上获得虚拟机的镜像。
          </para>
        </listitem>
        <listitem>
          <para>
            将虚拟机镜像打包并复制到导出存储域中。
          </para>
        </listitem>
        <listitem>
          <para>
            向 &OVIRT; 管理端发起远程过程调用，通知其导入虚拟机。
          </para>
        </listitem>
        <listitem>
          <para>
            &OVIRT; 管理端将虚拟机从导出存储域中导入。
          </para>
        </listitem>
      </orderedlist>
      <para>
        通过如下步骤配置并运行脚本化的批量 v2v 过程：
      </para>
      <procedure>
        <title>配置并运行脚本化的批量 v2v 过程</title>
        <step>
          <para>
            确保 &OVIRT; 管理端启用了 REST API，并且其能够为运行 v2v 过程的 Linux 主机所调用。关于 REST API 的更多信息，请参考《&OVIRT; 开发者手册》。
          </para>
        </step>
        <step>
          <para>
            在所使用的 Linux 主机上，创建一个包含如下内容的 <filename>v2v.sh</filename> 文件。确保您对该脚本进行了编辑使得其中包含了适用于您环境的值。
          </para>
          <example>
            <title>单台主机上运行的 v2v 脚本</title>
            <screen>
<![CDATA[
#!/bin/sh

# 声明所有需要导入的虚拟机
XENDOMAINS=("winxen" "winxp")
KVMDOMAINS=("winkvm")
VMWAREVMS=("win2003vmware")

# 循环 Xen 虚拟机，进行转换
for domain in ${XENDOMAINS[@]}
do
virt-v2v -ic xen:///localhost -o rhev -os storage.example.com:/exportdomain --network ovirtmgmt $domain
done

# 循环 KVM 虚拟机，进行转换
for domain in ${KVMDOMAINS[@]}
do
virt-v2v -o rhev -os storage.example.com:/exportdomain --network ovirtmgmt $domain
done

# 循环 VMware 虚拟机，进行转换
for vm in ${VMWAREVMS[@]}
do
virt-v2v -ic esx://esx.example.com/?no_verify=1 -o rhev -os storage.example.com:/exportdomain --network ovirtmgmt $vm
done

# 远程调用 EayunOS 管理端的导入虚拟机过程
export BASE_URL='https://[EayunOS-host]'
export HTTP_USER='user@internal'
export HTTP_PASSWORD='password'
curl -o eayunos.cer http://[EayunOS-host]/ca.crt

# 获得导出存储域信息
curl -X GET -H "Accept: application/xml" -u "${HTTP_USER}:${HTTP_PASSWORD}" --cacert eayunos.cer ${BASE_URL}/api/storagedomains?search=nfs_export -o exportdomain EXPORT_DOMAIN=`xpath exportdomain '/storage_domains/storage_domain/@id' | sed -e 's/ id=//' | sed -e 's/"//g'`

# 获得数据中心信息
curl -X GET -H "Accept: application/xml" -u "${HTTP_USER}:${HTTP_PASSWORD}" --cacert eayunos.cer ${BASE_URL}/api/datacenters?search=NFS -o dc DC=`xpath dc '/data_centers/data_center/@id' | sed -e 's/ id=//' | sed -e 's/"//g'`

# 获得集群信息
curl -X GET -H "Accept: application/xml" -u "${HTTP_USER}:${HTTP_PASSWORD}" --cacert eayunos.cer ${BASE_URL}/api/clusters?search=NFS -o cluster CLUSTER_ELEMENT=`xpath cluster '/clusters/cluster/@id' | sed -e 's/ id=//' | sed -e 's/"//g'`

# 列出导出存储域中的内容
curl -X GET -H "Accept: application/xml" -u "${HTTP_USER}:${HTTP_PASSWORD}" --cacert eayunos.cer ${BASE_URL}/api/storagedomains/${EXPORT_DOMAIN}/vms -o vms

# 导入机器
VMS=`xpath vms '/vms/vm/actions/link[@rel="import"]/@href' | sed -e 's/href="//g' | sed -e 's/"/ /g'`

for vms in $VMS
do
curl -v -u "${HTTP_USER}:${HTTP_PASSWORD}" -H "Content-type:application/xml" -d '<action><cluster><name>cluster_name</name></cluster><storage_domain><name>data_domain</name></storage_domain><overwrite>true</overwrite><discard_snapshots>true</discard_snapshots></action>' --cacert eayunos.cer ${BASE_URL}$vms
done
]]>
            </screen>
          </example>
          <note>
            <para>
              使用 <emphasis>POST</emphasis> 方法调用 REST API 来导出虚拟机。关于如何使用 REST API 的更多信息，请参考《&OVIRT; 开发者手册》。
            </para>
          </note>
        </step>
        <step>
          <para>
            运行该 <filename>v2v.sh</filename> 脚本。转换并导入大量的虚拟机可能需要几个小时。
          </para>
        </step>
      </procedure>
    </section>
  </section>
</chapter>
