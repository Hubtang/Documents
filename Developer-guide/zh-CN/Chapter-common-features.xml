<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "Developer-guide.ent">
%BOOK_ENTITIES;
]>
<chapter id="chap-EayunOS-Developer-guide-common-featuress_Chapter">
   <title>共同特点</title>
   <section id="sect-EayunOS-Developer-guide-common-featuress_Chapter-common-featuress_Section_1">
      <title>元素属性图标</title>
      <note>
         <title>
            注意
         </title>
         <para>
            在本指南中，每个资源的要素都详细的记录在表中。这些表包含了列属性，显示了描绘元素属性的图标。这些图标的含义请看
            <ulink url="#1">Table 8.1,“ Element property icons”</ulink>
         </para>
      </note>
      <table>
         <title>
            元素属性图标
         </title>
         <tgroup cols="3" colsep="1" rowsep="1">
            <thead>
               <row>
                  <entry>
                     属性
                  </entry>
                  <entry>
                     描述
                  </entry>
                  <entry>
                     图标
                  </entry>
               </row>
            </thead>
            <tbody>
               <row>
                  <entry>
                     创建所需
                  </entry>
                  <entry>
                     客户端提供的一个关于创建资源的表示必须要包含这些元素，但是对于资源的更新来说，这并不是强制的。
                  </entry>
                  <entry>
                     <inlinemediaobject>
                        <imageobject>
                           <imagedata fileref="images/exclamation.png" format="PNG" scale="100"/>
                        </imageobject>
                     </inlinemediaobject>
                  </entry>
               </row>
               <row>
                  <entry>
                     不可更新
                  </entry>
                  <entry>
                     当更新一个资源的时候，这些元素不能改变它们的值。只有它们的值不再被API用户更改时，客户端提供的用于显示更新的元素才会被包含进来。
                  </entry>
                  <entry>
                     <inlinemediaobject>
                        <imageobject>
                           <imagedata fileref="images/lock.png" format="PNG" scale="100"/>
                        </imageobject>
                     </inlinemediaobject>
                  </entry>
               </row>
               <row>
                  <entry>
                     只读
                  </entry>
                  <entry>
                     这些元素只可读。只读元素的值不能被创建和更改。
                  </entry>
                  <entry>
                     <inlinemediaobject>
                        <imageobject>
                           <imagedata fileref="images/stop.png" format="PNG" scale="100"/>
                        </imageobject>
                     </inlinemediaobject>
                  </entry>
               </row>
            </tbody>
         </tgroup>
      </table>
   </section>
   <section id="sect-EayunOS-Developer-guide-common-featuress_Chapter-common-featuress_Section_2">
      <title>表示法</title>
      <section id="sect-EayunOS-Developer-guide-common-featuress_Chapter-common-featuress_Section_2-1">
         <title>
            表示法
         </title>
         <para>
            API结构资源表示，如下面的xml文档结构所示:
         </para>
         <programlisting>
            <![CDATA[
<resource id="resource_id" href="/api/collection/resource_id">
    <name>Resource-Name</name>
    <description>A description of the resource</description>
    ...
</resource>   
         ]]>
         </programlisting>
         <para>
            在一个虚拟机的上下文中，表示如下所示：
         </para>
         <programlisting>
            <![CDATA[
<vm id="5b9bbce5-0d72-4f56-b931-5d449181ee06"
  href="/api/vms/5b9bbce5-0d72-4f56-b931-5d449181ee06">
    <name>RHEL6-Machine</name>
    <description>Red Hat Enterprise Linux 6 Virtual Machine</description>
    ...
</vm>               
            ]]>
         </programlisting>
      </section>
      <section id="sect-EayunOS-Developer-guide-common-featuress_Chapter-common-featuress_Section_2-2">
         <title>
            资源表示的普通属性
         </title>
         <para>
            所有资源表示包含了一组普通的属性。
         </para>
         <table>
            <title>资源表示的普通属性</title>
            <tgroup cols="4" colsep="1" rowsep="1">
               <thead>
                  <row>
                     <entry>
                        属性
                     </entry>
                     <entry>
                        类型
                     </entry>
                     <entry>
                        描述
                     </entry>
                     <entry>
                        属性
                     </entry>
                  </row>
               </thead>
               <tbody>
                  <row>
                     <entry>
                        <emphasis>id</emphasis>
                     </entry>
                     <entry>
                        GUID
                     </entry>
                     <entry>
                        虚拟机架构中的每个资源都有一个id,这个id扮演着全局唯一标示符（GUID）的角色。这个GUID是子鉴定资源的主要方法。
                     </entry>
                     <entry>
                     
                     </entry>
                  </row>
                  <row>
                     <entry>
                        <emphasis>href</emphasis>
                     </entry>
                     <entry>
                        string
                     </entry>
                     <entry>
                        资源的详细位置——绝对路径
                     </entry>
                     <entry>
                     
                     </entry>
                  </row>
               </tbody>
            </tgroup>   
         </table>
      </section>
      <section id="sect-EayunOS-Developer-guide-common-featuress_Chapter-common-featuress_Section_2-3">
         <title>
            资源表示常见元素
         </title>
         <para>
            所有的资源表示都包含了许多常见元素。
         </para>
         <table>
            <title>
               资源表示常见元素
            </title>
            <tgroup cols="4" colsep="1" rowsep="1">
               <thead>
                  <row>
                     <entry>
                        元素
                     </entry>
                     <entry>
                        类型
                     </entry>
                     <entry>
                        描述
                     </entry>
                     <entry>
                        属性
                     </entry>
                  </row>
               </thead>
               <tbody>
                  <row>
                     <entry>
                        <emphasis>name</emphasis>
                     </entry>
                     <entry>
                        string
                     </entry>
                     <entry>
                        一个用户提供的为了读取改资源而设置的名字。
                     </entry>
                     <entry>
                        
                     </entry>
                  </row>
                  <row>
                     <entry>
                        <emphasis>description</emphasis>
                     </entry>
                     <entry>
                        string
                     </entry>
                     <entry>
                        一个用户提供的且格式随意的为读取资源而写的描述。
                     </entry>
                     <entry>
                     
                     </entry>
                  </row>
               </tbody>
            </tgroup>
         </table>
      </section>
   </section>
   <section id="sect-EayunOS-Developer-guide-common-featuress_Chapter-common-featuress_Section_3">
      <title>集合</title>
      <section id="sect-EayunOS-Developer-guide-common-featuress_Chapter-common-featuress_Section_3-1">
         <title>
            集合
         </title>
         <para>
            集合是一组相同类型的资源。
         </para>
      </section>
      <section id="sect-EayunOS-Developer-guide-common-featuress_Chapter-common-featuress_Section_3-2">
         <title>
            列出集合中所有的资源
         </title>
         <para>
            利用<emphasis>GET</emphasis>对从entry point中得到的集合URI的请求来获取集合中的资源列表。
         </para>
         <para>
            包含一个<emphasis>Accept</emphasis>的HTTP请求头从而为响应格式定义文件类型。
         </para>
         <programlisting>
         <![CDATA[
GET /api/[collection] HTTP/1.1
Accept: [MIME type]
         ]]>
         </programlisting>
      </section>
      <section id="sect-EayunOS-Developer-guide-common-featuress_Chapter-common-featuress_Section_3-3">
         <title>
            列出子集合中的扩展资源。
         </title>   
         <para>
            当<emphasis>Accept</emphasis>头包含了详细的参数时，API会扩展资源描述以此来包含子集合。
         </para>
         <programlisting>
            <![CDATA[
GET /api/collection HTTP/1.1
Accept: application/xml; detail=subcollection
            ]]>
         </programlisting>
         <para>
            这个包含了多个子集合要求，它使用了分离的详细参数,要么是：
         </para>
         <programlisting>
            <![CDATA[
GET /api/collection HTTP/1.1
Accept: application/xml; detail=subcollection1; detail=subcollection2
            ]]>
         </programlisting>
         <para>
            要么这个详细的参数使用一个 + 操作符分离开的子集合。
         </para>
         <programlisting>
            <![CDATA[
GET /api/collection HTTP/1.1
Accept: application/xml; detail=subcollection1+subcollection2+subcollection3
            ]]>
         </programlisting>
         <para>
            API未下面的主集合扩展了子集合。
         </para>
         <table>
            <title>
               使用子集合的集合
            </title>
            <tgroup cols="3" colsep="1" rowsep="1">
               <thead>
                  <row>
                     <entry>
                        集合
                     </entry>
                     <entry>
                        扩展子集合的支持
                     </entry>
                  </row>
               </thead>            
               <tbody>
                  <row>
                     <entry>
                        <emphasis>主机</emphasis>
                     </entry>
                     <entry>
                        <emphasis>statistics</emphasis>
                     </entry>
                  </row>
                  <row>
                     <entry>
                        <emphasis>主机</emphasis>
                     </entry>
                     <entry>
                        <emphasis>statistics,nics,disks</emphasis>
                     </entry>
                  </row>
               </tbody>
            </tgroup>
         </table>
         <example>
            <title>
               虚拟机集合中的一个对扩展的统计，网络接口卡和磁盘子集合的请求。
            </title>
            <programlisting>
               <![CDATA[
GET /api/vms HTTP/1.1
Accept: application/xml; detail=statistics+nics+disks
               ]]>
            </programlisting>
         </example>
      </section>
      <section id = "sect-EayunOS-Developer-guide-common-featuress_Chapter-common-featuress_Section_3-4">
         <title>搜索队列中的集合</title>
         <para>在那个集合的搜索查询中的一个对链接<emphasis>"collection/search"</emphasis>的<emphasis>GET</emphasis>请求。API只返回符合搜索查询限制条件的集合中的资源。</para>
         <programlisting>
            <![CDATA[
GET /api/collection?search={query} HTTP/1.1
Accept: application/xml
HTTP/1.1 200 OK
Content-Type: application/xml
<collection>
<resource id="resource_id" href="/api/collection/resource_id">
...
</resource>
...
</collection>            
            ]]>        
         </programlisting>
      </section>
      <section id = "sect-EayunOS-Developer-guide-common-featuress_Chapter-common-featuress_Section_3-5">
         <title>
            最大结果参数
         </title>
         <para>
            使用额外的最大URL参数来限制结果列表。
         </para>
         <programlisting>
            <![CDATA[
GET /api/collection;max=1 HTTP/1.1
Accept: application/xml
HTTP/1.1 200 OK
Content-Type: application/xml
<collection>
<resource id="resource_id" href="/api/collection/resource_id">
<name>Resource-Name</name>
<description>A description of the resource</description>
...
</resource>
</collection>
            ]]>
         </programlisting>
         <note>
            <para>
               如果集合是可搜索的，最大参数将会覆盖数据库中默认的最大返回结果。
            </para>
         </note>
      </section>
      <section id="sect-EayunOS-Developer-guide-common-featuress_Chapter-common-featuress_Section_3-6">
         <title>
            大小写敏感性
         </title>
         <para>
            所有的搜索查询默认都是大小写敏感的。URL语法提供了一个布尔值选项来切换大小写。
         </para>
         <example>
            <title>
               大小写敏感的搜索查询
            </title>
            <programlisting>
               <![CDATA[
GET /api/collection;case-sensitive=false?search={query} HTTP/1.1
Accept: application/xml
               ]]>
            </programlisting>
         </example>
      </section>
      <section id="sect-EayunOS-Developer-guide-common-featuress_Chapter-common-featuress_Section_3-7">
         <title>
            查询语法
         </title>
         <para>
            API使用URI模板来执行通过<emphasis>GET</emphasis>请求的搜索查询。
         </para>
         <programlisting>
            <![CDATA[
GET /api/collection?search={query} HTTP/1.1
Accept: application/xml
            ]]>
         </programlisting>
         <para>
            查询模板值指向了API连接的<emphasis>集合</emphasis>的查找查询。这个集合使用了与&OVIRT;企业级查询语言相同的格式：<emphasis>(criteria) [sortby (elem ent) asc|desc]</emphasis>
         </para>
         <para>
            <emphasis>sortby</emphasis>子句是可选的，只有在排列结果的时候才会需要。
         </para>
         <table>
            <title>
               示例搜索查询
            </title>
            <tgroup cols="3" colsep="1" rowsep="1">
               <thead>
                  <row>
                     <entry>
                        集合
                     </entry>
                     <entry>
                        准则
                     </entry>
                     <entry>
                        结果
                     </entry>
                  </row>
               </thead>
               <tbody>
                  <row>
                     <entry>
                        <emphasis>hosts</emphasis>
                     </entry>
                     <entry>
                        <emphasis>vms.status=up</emphasis>
                     </entry>
                     <entry>
                        显示一个虚拟机中<emphasis>up</emphasis>状态的所有主机的列表。
                     </entry>
                  </row>
                  <row>
                     <entry>
                        <emphasis>vms</emphasis>
                     </entry>
                     <entry>
                        <emphasis>dom ain=qa.com pany.com</emphasis>
                     </entry>
                     <entry>
                        显示了所有运行在特定域上的虚拟机列表。
                     </entry>
                  </row>
                  <row>
                     <entry>
                        <emphasis>vms</emphasis>
                     </entry>
                     <entry>
                        <emphasis>dom ain=qa.com pany.com</emphasis>
                     </entry>
                     <entry>
                        显示了用户名为<emphasis>mary</emphasis>的这个用户的所有虚拟机列表
                     </entry>
                  </row>
                  <row>
                     <entry>
                        <emphasis>events</emphasis>
                     </entry>
                     <entry>
                        <emphasis>severity>norm al sortby time</emphasis>
                     </entry>
                     <entry>
                        显示了所有<emphasis>事件</emphasis>的列表，这些事件往往是比<emphasis>normal</emphasis>较重要的且是按照<emphasis>time</emphasis>元素值排序的。
                     </entry>
                  </row>
                  <row>
                     <entry>
                        <emphasis>events</emphasis>
                     </entry>
                     <entry>
                        <emphasis>severity>norm al sortby time desc</emphasis>
                     </entry>
                     <entry>
                        显示了所有事件的列表,这些事件往往比<emphasis>normal</emphasis>重要且是按照<emphasis>time</emphasis>元素值降序排列的。
                     </entry>
                  </row>
               </tbody>
            </tgroup>
         </table>
         <para>API需要<emphasis>query</emphasis>模板作为URL编码，以此来转换保留字符，比如说operators和spaces</para>
         <example>
            <title>
               URL编码搜索查询
            </title>
            <programlisting>
               <![CDATA[
GET /api/vms?search=name%3Dvm1 HTTP/1.1
Accept: application/xml
               ]]>
            </programlisting>
         </example>
      </section>
      <section id="sect-EayunOS-Developer-guide-common-featuress_Chapter-common-featuress_Section_3-8">
       <title>
                搜索查询
            </title>
        <para>
               在搜索查询时会利用星号这个通配符代替一部分的值。
            </para>
       <example>
          <title>
             对于name=vm*的通配符的搜索查询
               </title>
          <programlisting>
               <![CDATA[
GET /api/vms?search=name%3Dvm* HTTP/1.1
Accept: application/xml
                  ]]>
               </programlisting>
      <para>
         这个查询可能会导致虚拟机的名字都以<emphasis>vm</emphasis>开头，例如<emphasis>vm1</emphasis>,<emphasis>vm2</emphasis>,<emphasis>vma</emphasis>或者<emphasis>vm-webserver</emphasis>。
      </para>
       </example>   
       <example>
      <title>
         name=v*1的通配扶搜索查询
      </title>
      <programlisting>
         <![CDATA[
GET /api/vms?search=name%3Dv*1 HTTP/1.1
Accept: application/xml
         ]]>
      </programlisting>
      <para>   
         这个查询可能会导致所有虚拟机的名字都以<emphasis>v</emphasis>开头，以<emphasis>1</emphasis>结束，例如：<emphasis>vm1</emphasis>, <emphasis>vr1</emphasis>或者<emphasis>virtualmachine1</emphasis>。
      </para>
      </example>
      </section>
      <section id="sect-EayunOS-Developer-guide-common-featuress_Chapter-common-featuress_Section_3-9">
   <title>
      分页   
   </title>
   <para>
      一些&OVIRT;虚拟环境包含了大量的资源集合。但是，API只为集合的一个搜索查询显示默认的资源数量。为了显示更多的默认值，API通过包含了<emphasis>page</emphasis>命令的搜索查询将集合分页。
   </para>    
   <example>   
      <title>
         分页资源
      </title>   
      <para>   
         这为在一个集合中分页举例。URL编码要求是:
      </para>
      <programlisting>
         <![CDATA[
GET /api/collection?search=page%201 HTTP/1.1
Accept: application/xml            
         ]]>
      </programlisting>
      <para>
                        增加页数从而可以看到结果的下一页。
                </para>
                <programlisting>
                        <![CDATA[
GET /api/collection?search=page%202 HTTP/1.1
Accept: application/xml
         ]]>
                </programlisting>
                <para>
                       使用<emphasis>page</emphasis>命令还可以和搜索查询中的其他命令联系起来。例如： 
                </para>
                <programlisting>
                        <![CDATA[
GET /api/collection?search=sortby%20element%20asc%20page%202 HTTP/1.1
Accept: application/xml
                        ]]>
                </programlisting>
      <para>   
         这个查询显示除了通过查询元素排序的集合列表的第二页。
      </para>
   </example>
      </section>
      <section id="sect-EayunOS-Developer-guide-common-featuress_Chapter-common-featuress_Section_3-10">
          <title>
      集合中创建新资源
   </title>
   <para>
      用对集合URI的<emphasis>POST</emphasis>请求创建一个新的资源，这个集合URI包括了新资源的表现。
   </para>   
   <para>
      添加<emphasis>Accept</emphasis>HTTP头来定义响应格式的MIME类型。
   </para>
   <para>
      每个资源类型都有其自身独特的属性。当创建一个新的资源时，客户端会提供这些属性。为了解更多的细节问题，从而指向了个别的资源类型文件。   
   </para>
   <para>
      如果一个所需的属性没有了，创建时是不会表现出缺失元素的。
   </para>
   <programlisting>
      <![CDATA[
POST /api/[collection] HTTP/1.1
Accept: [MIME type]
Content-Type: [MIME type]
[body]
      ]]>
   </programlisting>
      </section>
      <section id="sect-EayunOS-Developer-guide-common-featuress_Chapter-common-featuress_Section_3-11">
      <title>
      异步请求
   </title>
   <para>
      API执行异步<emphasis>POST</emphasis>请求，除非用户用一个<emphasis>Expect:201 created</emphasis>头。
   </para>
   <para>
      举例来说，某些资源比如虚拟机，磁盘，快照和模板被异步创建。一个创建异步资源的请求导致了<emphasis>202 Accepted</emphasis>状态。对于<emphasis>202 Accepted</emphasis>资源的初始文件结构还包含了一个<emphasis>creation_status</emphasis>元素和对创建状态更新的链接。例如：
   </para>
   <programlisting>
      <![CDATA[
POST /api/collection HTTP/1.1
Accept: application/xml
Content-Type: application/xml
<resource>
<name>Resource-Name</name>
</resource>
HTTP/1.1 202 Accepted
Content-Type: application/xml
<resource id="resource_id" href="/api/collection/resource_id">
<name>Resource-Name</name>
<creation_status>
<state>pending</state>
</creation status>
<link rel="creation_status"
href="/api/collection/resource_id/creation_status/creation_status_id"/>
...
</resource></state></creation_status></name></resource></name></resource>
      ]]>
   </programlisting>
   <para>
      对<emphasis>creation_status</emphasis>链接的请求提供了一个创建状态更新。
   </para>
   <programlisting>
      <![CDATA[
GET /api/collection/resource_id/creation_status/creation_status_id HTTP/1.1
Accept: application/xml
HTTP/1.1 200 OK
Content-Type: application/xml
<creation id="creation_status_id" id="sect-EayunOS-Developer-guide-common-featuress_Chapter-common-featuress_Section_4-1"
href="/api/collection/resource_id/creation_status/creation_status_id">
<status>
<state>complete</state>
</status>
</creation></state></status></creation>      
      ]]>
   </programlisting>
   <para>
      重写异步资源创建需要一个<emphasis>Expect:201-created</emphasis>头:
   </para>
   <programlisting>
      <![CDATA[
POST /api/collection HTTP/1.1
Accept: application/xml
Content-Type: application/xml
Expect: 201-created
<resource>
<name>Resource-Name</name>
</resource></name></resource>      
      ]]>
   </programlisting>
   </section>
</section>
      <section id="sect-EayunOS-Developer-guide-common-featuress_Chapter-common-featuress_Section_4">
         <title>
            资源
         </title>
         <section id="sect-EayunOS-Developer-guide-common-featuress_Chapter-common-featuress_Section_4-1">
         <title>
              资源
         </title>
           <para>
         资源是基于REST的网络服务中的数据资源。每个资源类型包含了许多普通属性，这些属性是由REST API抽象出来的，通常在XML和JSON中出现。用户可以查看资源表示，然后编辑参数并发送表现，至API的资源URL，它改变了资源。用户还删除了REST中个别的资源。
         </para>
         <para>
         一个基于REST的网络服务还能将资源汇集成一个集合。用户可以看到集合中所有资源。用户还可以个在具体的集合中创建新的资源。
         </para>
         </section>
         <section id="sect-EayunOS-Developer-guide-common-featuress_Chapter-common-featuress_Section_4-2">
         <title>
            检索资源
         </title>
         <para>
            利用请求从集合列表中获取的对URI的<emphasis>GET</emphasis>的请求获取资源状态。
         </para>
         <para>
            添加<emphasis>Accept</emphasis>HTTP头来为响应格式定义MIME类型。
         </para>
         <programlisting>
            <![CDATA[
GET /api/[collection]/[resource_id] HTTP/1.1
Accept: [MIME type]
            ]]>
         </programlisting>
         </section>
         <section id="sect-EayunOS-Developer-guide-common-featuress_Chapter-common-featuress_Section_4-3">
         <title>
            更新资源
         </title>
         <para>
                用包含一个已更改的描述利用<emphasis>GET</emphasis>请求更改资源属性            
         </para>
         <para>
                一个<emphasis>PUT</emphasis>请求需要一个<emphasis>ontent-T ype: application/xml</emphasis>头。它表明了请求体中表示MIME类型的API
         </para>
         <para>
            添加一个<emphasis>Accept</emphasis>HTTP请求头来为响应格式定义MIME类型。
         </para>
                <programlisting>
                        <![CDATA[
PUT /api/collection/resource_id HTTP/1.1
Accept: [MIME type]
Content-Type: [MIME type]
[body]
                        ]]>
                </programlisting>
         <para>
            这没有包括不变的资源属性，即那种用户试图更改的API。如果要尝试修改绝对不可改变的属性时，API会在响应体中报出一个错误报告。
         </para>
         <para>
            从表示中移处的属性被忽略而且不可改变。
         </para>
         </section>
         <section id="sect-EayunOS-Developer-guide-common-featuress_Chapter-common-featuress_Section_4-4">
            <title>
               删除资源   
            </title>
            <para>
               删除一个用<emphasis>DELETE</emphasis>请求发送其URI的资源
            </para>
            <para>
               添加一个<emphasis>Accept</emphasis>HTTP头来为响应格式定义MIME类型
            </para>
            <programlisting>
               <![CDATA[
DELETE /api/[collection]/[resource_id] HTTP/1.1
Accept: [MIME type]
               ]]>
            </programlisting>
            <para>
               一些事例例如在对特殊额外的属性的<emphasis>DELETE</emphasis>请求需要可选的请求体内容。一个有可选请求体内容的<emphasis>DELETE</emphasis>请求需要一个<emphasis>Content-Type</emphasis>头来告知对API请求的表示MIME类型。如果一个<emphasis>DELETE</emphasis>请求不包括请求体，那么删去<emphasis>Content-Type</emphasis>头。
            </para>
         </section>
         <section id="sect-EayunOS-Developer-guide-common-featuress_Chapter-common-featuress_Section_4-5">
            <title>
               子集合关系
            </title>
            <para>
               一个子集合关系定义了资源与子集合之间的分层链接。这个子集合是存在的并且有着资源上下文的含义。举例来说，一泰虚拟机包含了网络接口，这就意味这API映射到虚拟机资源和网络接口子集合的关系。
            </para>
            <para>
         子集合被用于模拟如下关系类型：
      </para>
      <itemizedlist>
         <listitem>
            <para>
               N:M映射，在这种映射关系中，一个父资源会拥有一些子资源，反之亦然。例如，一台虚拟机可以包含多个磁盘和一些多台虚拟机共享的磁盘。
            </para>
         </listitem>
         <listitem>
            <para>
               1:N映射，在这种映射关系下，映射资源是依赖父资源的。没有父资源，独立资源就不会存在。例如，虚拟机和快照的链接。
            </para>
         </listitem>
         <listitem>
            <para>
               1:N映射，在这种映射关系下，映射资源是独立于父资源的。但是数据仍然与关系有联系。例如，集群与网络之间的链接。      
            </para>
         </listitem>
      </itemizedlist>
      <para>
         API定义了资源和使用了<emphasis>link rel=</emphasis>属性这个子集合来定义资源和子集合的关系。
      </para>
      <programlisting>
         <![CDATA[
GET /api/collection/resource_id HTTP/1.1
Accept: application/xml
HTTP/1.1 200 OK
Content-Type: application/xml
<resource id="resource_id" href="/api/collection/resource_id">
...
<link rel="subcollection"
href="/api/collection/resource_id/subcollection"/>
...
</resource></resource>
         ]]>
      </programlisting>
      <para>
         API用户现在可以查询子集合
      </para>
      <programlisting>
         <![CDATA[
GET /api/collection/resource_id/subcollection HTTP/1.1
Accept: application/xml
HTTP/1.1 200 OK
Content-Type: application/xml
<subcollection>
<subresource id="subresource_id"
href="/api/collection/resource_id/subcollection/subresource_id">
...
</subresource>
...
</subcollection></subresource></subcollection>   
         ]]>
      </programlisting>
   </section>
   <section id="sect-EayunOS-Developer-guide-common-featuress_Chapter-common-featuress_Section_4-6">
                <title>
         XML元素关系                
                </title>
      <para>
         XML元素的链接作为一个替代的子集来表示资源之间的关系。
XML元素链接是简单地用一个“href”属性指向的链接元素的元素。
XML元素的链接是用来模拟简单的1：没有一个依赖资源N之间的映射
和不与关系相关联的数据。例如，一个主机和一个之间的关系
集群。
      </para>
      <para>
         这些关系的例子包括：
      </para>
      <itemizedlist>
         <listitem>
            <para>
               从在一个子集到父资源的资源的反向链接;或
            </para>
         </listitem>
         <listitem>
                                <para>
                                   具有任意关系，资源之间的链接。
            </para>
                        </listitem>
      </itemizedlist>
      <example>
         <title>
            使用XML元素从一个子集资源的backlinking到资源.
         </title>
         <programlisting>
            <![CDATA[
GET /api/collection/resource_id/subcollection/subresource_id HTTP/1.1
HTTP/1.1 200 OK
Content-Type: application/xml
<subcollection>
<subresource id="subresource_id"
href="/api/collection/resource_id/subcollection/subresource_id">
<resource id="resource_id" href="/api/collection/resource_id"/>
...
</subresource>
</subcollection></subresource></subcollection>            
            ]]>
         </programlisting>
      </example>
        </section>
   <section id="sect-EayunOS-Developer-guide-common-featuress_Chapter-common-featuress_Section_4-7">
                <title>
               指令          
                </title>
      <para>
         大部分的资源包括指令链接列表，以提供通过标准的HTTP没有实现的功能
方法。
      </para>
      <programlisting>
         <![CDATA[
<resource>
...
<actions>
<link rel="start" href="/api/collection/resource_id/start"/>
<link rel="stop" href="/api/collection/resource_id/stop"/>
...
</actions>
...
</resource></actions></resource>      
         ]]>
      </programlisting>
      <para>
该API调用一个指令与一个POST请求提供的URI。在POST的请求体需要
指令表示包封常见和任务特定的参数。
      </para>
      <table>
         <title>
            共同指令参数   
         </title>
         <tgroup align="left" cols="2" colsep="1" rowsep="1">
         <thead>
            <row>
               <entry>
                  元素
               </entry>
               <entry>
                  描述
               </entry>
            </row>
         </thead>
         <tbody>
            <row>
               <entry>
                  <emphasis>async</emphasis>
               </entry>
               <entry>
                                                <emphasis>true</emphasis>如果服务器<emphasis>202 Accepted</emphasis>和立即响应行动表示包含要轮询完成一个<emphasis>href</emphasis>链接。
                                        </entry>
            </row>
            <row>
               <entry>
                  <emphasis>grace_period</emphasis>
               </entry>
               <entry>
                  宽限期以毫秒为单位，必须在指令到期前启动。
               </entry>
            </row>
         </tbody>
         </tgroup>
      </table>
      <para>
         个人行为和它们的参数都记录在个人资源类型的文档中。
有些参数是强制性的具体行动和他们的缺席表示有故障
响应。
一个指令还需要一个<emphasis>ontent-Type:application/xml</emphasis>请求头，因为POST请求
需要在人体内含量的XML表示形式。
当异步发起的行动，立即202接受响应提供了一个链接，
监视任务的状态：
      </para>
      <programlisting>
         <![CDATA[
POST /api/collection/resource_id/action HTTP/1.1
Content-Type: application/xml
Accept: application/xml
<action>
<async>true</async>
</action>
HTTP/1.1 202 Accepted
Content-Type: application/xml
<action id="action_id"
href="/api/collection/resource_id/action/action_id">
<async>true</async>
...
         ]]>
      </programlisting>
      <para>
在操作URI随后的GET提供的异步任务的状态的指示。
      </para>
      <table>
         <title>
            指令状态   
         </title>      
         <tgroup align="left" cols="2" colsep="1" rowsep="1">
            <thead>
                                   <row>
               <entry>
                  状态
               </entry>
               <entry>
                  描述
               </entry>
               </row>         
            </thead>
            <tbody>   
               <row>
               <entry>
                  <emphasis>pending</emphasis>
               </entry>
               <entry>
                  工作还没开始
               </entry>
                    </row>
                    <row>
               <entry>
                  <emphasis>in_progress</emphasis>
               </entry>
               <entry>
                  工作正在进行当中
               </entry>
               </row>
               <row>
                   <entry>
                           <emphasis>complete</emphasis>
                   </entry>
                   <entry>
                           工作成功完成。
                   </entry>
                </row>
                <row>
                   <entry>
                           <emphasis>failed</emphasis>
                   </entry>
                   <entry>
                           工作失败。返回的<emphasis>action</emphasis>表示可能会描述错误详情。
                   </entry>   
                </row>
            </tbody>
         </tgroup>
      </table>
      <para>
         一旦任务完成，保留期限不定的指令。一旦这已过期随后的<emphasis>GET</emphasis>会重定向到<emphasis>301</emphasis>这个目标资源。   
      </para>
      <programlisting>
   <![CDATA[
GET /api/collection/resource_id/action/action_id HTTP/1.1
Accept: application/xml
HTTP/1.1 200 OK
Content-Type: application/xml
<action id="action_id"
href="/api/collection/resource_id/action/action_id">
<status>
<state>pending</state>
</status>
<link rel="parent" /api/collection/resource_id"/>
<link rel="replay" href="/api/collection/resource_id/action"/>
]]>
      </programlisting>
      <para>
         指令表示也包括由rel属性确定了一些链接：
      </para>
      <table>
                  <title>
                       指令关系
                  </title>
                  <tgroup align="left" cols="2" colsep="1" rowsep="1">
                  <thead>
                  <row>
                  <entry>
                     类型
                  </entry>
                  <entry>
                     描述
                  </entry>
                  </row>
                  </thead>
                  <tbody> 
                  <row>
                     <entry>
                        <emphasis>parent</emphasis>
                     </entry>
                     <entry>
                        链接回到这个指令的资源。
                     </entry>
                  </row>
                  <row>
                     <entry>
                        <emphasis>replay</emphasis>
                     </entry>   
                     <entry>
                        链接回原来的指令URI。张贴到这个URI会导致
要重新启动操作。   
                     </entry>
                   </row>
                  </tbody>
                  </tgroup>
        </table>
        </section>
         <section id="sect-EayunOS-Developer-guide-common-featuress_Chapter-common-featuress_Section_4-8">
                <title>
                   许可   
                </title>
            <para>
         每个资源都包含了一个issions子集。每个<emphasis>permission</emphasis>包含一个用户，一个分配角色和指定的资源。例如：
         </para>
      <programlisting>
         <![CDATA[
GET /api/collection/resource_id/permissions HTTP/1.1
Accept: application/xml
HTTP/1.1 200 OK
Content-Type: application/xml
<permissions>
<permission id="permission-id"
href="/api/collection/resource_id/permissions/permission_id">
<role id="role_id" href="/api/roles/role_id"/>
<user id="user_id" href="/api/users/user_id"/>
<resource id="resource_id" href="/api/collection/resource_id"/>
</permission>
...
</permissions></permission></permissions>
         ]]>
      </programlisting>
    </section>
    <section id="sect-EayunOS-Developer-guide-common-featuress_Chapter-common-featuress_Section_4-9">
                <title>
                     处理错误
                </title>
      <para>
         
有些错误需要超出标准的HTTP状态代码的进一步解释。例如，该API
报告不成功的资源状态更新或活动，在响应一个故障表示
实体主体。故障包含一个原因和细节的字符串。客户端必须能够容纳失败
通过提取故障或预期的资源表示这取决于请求的响应
状态代码。这种情况被清楚地显示在单个资源文件中。
      </para>   
      <programlisting>
         <![CDATA[
PUT /api/collection/resource_id HTTP/1.1
Accept: application/xml
Content-Type: application/xml
<resource>
<id>id-update-test</id>
</resource>
HTTP/1.1 409 Conflict
Content-Type: application/xml
<fault>
<reason>Broken immutability constraint</reason>
<detail>Attempt to set immutable field: id</detail>
</fault></detail></reason></fault></id></resource>         
         ]]>
      </programlisting>
      </section>
   </section>
</chapter>
